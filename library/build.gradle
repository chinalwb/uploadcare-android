apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'org.jetbrains.dokka'

android {
    compileSdkVersion versions.compile_sdk

    defaultConfig {
        minSdkVersion versions.min_sdk
        targetSdkVersion versions.target_sdk
        versionCode 13
        versionName "3.1.1"
        buildConfigField 'String', 'VERSION_NAME', "\"3.1.1\""
    }

    androidExtensions {
        // Enable experimental Kotlin features in gradle to enable Parcelize
        // https://github.com/Kotlin/KEEP/blob/master/proposals/extensions/android-parcelable.md
        experimental = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/DEPENDENCIES'
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    dokkaHtml.configure {
        dokkaSourceSets {
            named("main") {
                outputDirectory.set(buildDir.resolve("javadoc"))
                sourceRoots.setFrom(file("src/main/java"))
                noAndroidSdkLink.set(false)
                skipEmptyPackages.set(true)
                includeNonPublic.set(false)
            }
        }
    }
}

afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // You can then customize attributes of the publication as shown below.
                groupId = 'com.uploadcare.android.library'
                artifactId = 'uploadcare-android'
                version = android.defaultConfig.versionName

                // Define this explicitly if using implementation or api configurations
                pom.withXml {
                    def dependenciesNode = asNode().getAt('dependencies')[0] ?: asNode().appendNode('dependencies')

                    // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                    configurations.implementation.allDependencies.each {
                        // Ensure dependencies such as fileTree are not included.
                        if (it.name != 'unspecified') {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                        }
                    }
                }
            }
        }
    }
}

bintray {
    Properties properties = new Properties()
    if (project.rootProject.file('local.properties').exists()) {
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
    }
    user = properties.containsKey('bintray.user') ? properties.getProperty("bintray.user") : ""
    key = properties.containsKey('bintray.key') ? properties.getProperty("bintray.key") : ""

    publications = ['release']
    dryRun = true
    publish = true

    pkg {
        repo = 'maven'
        name = 'uploadcare-android'
        licenses = ['Apache-2.0']
        desc = 'Android client library for the Uploadcare API.'
        websiteUrl = 'https://github.com/uploadcare/uploadcare-android'
        issueTrackerUrl = 'https://github.com/uploadcare/uploadcare-android/issues'
        vcsUrl = 'https://github.com/uploadcare/uploadcare-android.git'

        version {
            name = android.defaultConfig.versionName
        }
    }
}

dependencies {
    testImplementation "junit:junit:$versions.junit"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlin_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.kotlin_coroutines"
    implementation "com.squareup.moshi:moshi:$versions.moshi"
    implementation "com.squareup.moshi:moshi-adapters:$versions.moshi"
    implementation "com.squareup.moshi:moshi-kotlin:$versions.moshi"
    implementation "androidx.annotation:annotation:$versions.annotation"
    implementation "com.squareup.okhttp3:okhttp:$versions.okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttp"
    testImplementation "com.squareup.okhttp3:mockwebserver:$versions.okhttp"
}